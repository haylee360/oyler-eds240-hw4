---
title: "Preliminary Exploration of the Gender Bias in Academic Publishing"
author: "Haylee Oyler"
date: 2025-02-04
format:
  html:
    embed-resources: true # this ensures that your rendered .html file is self-contained, so we (your instructors) can open it and view all your work
execute:
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| code-fold: true
#| code-summary: "Load Libraries"

library(tidyverse)
library(here)
library(janitor)
library(readxl)
library(patchwork)
library(showtext)
library(glue)
library(ggtext)
library(scales)
```

## Data Exploration 
```{r}
# Read in data
author_stats = read_xlsx(here("data", "authors.xlsx"), sheet = 1) %>% 
  clean_names()

# View the df
head(author_stats)
```

```{r}
# How large is the data frame?
dim(author_stats)
```


```{r}
# What academic fields does the data contain?
unique(author_stats$subject_area_or_subfield)
```

```{r}
# How many countries does the data contain?
length(unique(author_stats$country))
```

```{r}
# The data is divided into two unique time periods
unique(author_stats$period)
```

## Exploratory Visualization

Create at least three exploratory data visualizations (but of course feel free to create more!). The goal of these visualizations is to explore your data for any potentially interesting patterns or trends, which you or may not decide to pursue further as you iterate on your final project deliverable. These plots do not need to be polished (e.g. updated theme), but it may be helpful to try arranging data to identify any trends.


```{r}
# Filter data into the two different time periods

# Older data
author_old <- author_stats %>% 
  filter(period == "1999-2003")

# Generate some summary stats
old_sum <- author_old %>% 
  group_by(gender) %>% 
  summarise(gender_authors = sum(authors)) %>% 
  ungroup() %>% 
  mutate(total_authors = sum(gender_authors), 
         percent_pub = gender_authors/total_authors)

# More recent data
author_new <- author_stats %>% 
  filter(period == "2014-2018")

# Generate some summary stats
new_sum <- author_new %>% 
  group_by(gender) %>% 
  summarise(gender_authors = sum(authors)) %>% 
  ungroup() %>% 
  mutate(total_authors = sum(gender_authors), 
         percent_pub = gender_authors/total_authors)
```

### Pie chart of total publications by gender
```{r}
#| code-fold: true
#| code-summary: "Reveal code"
old_pie <- ggplot(old_sum, aes(x = "", y = percent_pub, fill = gender)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  geom_text(aes(label = scales::percent(percent_pub, accuracy = 1)), 
            position = position_stack(vjust = 0.5),  
            color = "white", size = 5) +  
  scale_fill_brewer(palette = "Dark2") +  
  theme_void() +  
  labs(title = "Publications by Gender (1993-2003)",
       fill = "Gender") +
  theme(
    plot.title = element_text(hjust=0.5),
    legend.position = "right"
  )

new_pie <- ggplot(new_sum, aes(x = "", y = percent_pub, fill = gender)) +
  geom_bar(stat = "identity", width = 1) + 
  coord_polar("y", start = 0) +
  geom_text(aes(label = scales::percent(percent_pub, accuracy = 1)), 
            position = position_stack(vjust = 0.5),  
            color = "white", size = 5) +  
  scale_fill_brewer(palette = "Dark2") +  
  theme_void() +  
  labs(title = "Publications by Gender (2014-2018)",
       fill = "Gender") +
  theme(
    plot.title = element_text(hjust=0.5),
    legend.position = "right"
  )

old_pie + new_pie

```

### Bar chart of authors by gender and country
```{r}
#| code-fold: true
#| code-summary: "Reveal code"
ggplot(author_stats, aes(x = fct_reorder(country, authors), 
                         y = authors, 
                         fill = gender)) +
  geom_col(position = "dodge", show.legend = TRUE) +  
  coord_flip() +  
  scale_fill_brewer(palette = "Dark2") +
  labs(title = "Number of Academic Authors by Gender and Country",
      x = "Country",
      y = "Number of Authors",
      fill = "Gender") +
  theme_minimal() 
```
```{r}
# Calculate summary stats grouped by field
fields <- author_stats %>% 
  group_by(subject_area_or_subfield, gender) %>% 
  summarise(field_gender = sum(authors)) %>% 
  mutate(total_authors = sum(field_gender),
         percent_field = field_gender/total_authors)
```

```{r}
# pivot wider to add columns of the number of authors by field by men or women
fields_wide <- fields %>%
  pivot_wider(
    id_cols = c(subject_area_or_subfield, total_authors),
    names_from = gender,
    values_from = c(field_gender, percent_field),
    names_prefix = ""
  ) %>%
  group_by(subject_area_or_subfield) %>%
  mutate(total_authors = first(total_authors),
         gender_gap = field_gender_men - field_gender_women,
         percent_gender_gap = percent_field_men - percent_field_women) %>%
  ungroup() %>% 
  filter(subject_area_or_subfield != "ALL")


```

### Dumbbell chart of authors by gender and field

```{r}

# showtext_auto(FALSE)
# showtext_opts(dpi=300)
```

```{r}
#......................import Google fonts.......................
# `name` is the name of the font as it appears in Google Fonts
# `family` is the user-specified id that you'll use to apply a font in your ggpplot
# font_add_google(name = "Josefin Sans", family = "josefin")
# font_add_google(name = "Sen", family = "sen")
# 
# #....................import Font Awesome fonts...................
# font_add(family = "fa-brands",
#          regular = here::here("fonts", "Font Awesome 6 Brands-Regular-400.otf"))
# font_add(family = "fa-regular",
#          regular = here::here("fonts", "Font Awesome 6 Free-Regular-400.otf")) 
# font_add(family = "fa-solid",
#          regular = here::here("fonts", "Font Awesome 6 Free-Solid-900.otf"))
```

```{r}
# subtitle <- glue::glue("<span style='font-family:fa-regular;'>{money_icon};</span>
#                        Median earnings of full-time 
#                        <span style='color:#6A1E99;'>**male**</span> versus 
#                        <span style='color:#ec9bfc;'>**female**</span>
#                        workers by occupation in 2016")
```


```{r}
#| code-fold: true
#| code-summary: "Reveal code"

fields_wide <- fields_wide %>% 
  mutate(subject_area_or_subfield = fct_reorder(.f = subject_area_or_subfield, 
                                                .x = percent_gender_gap))

ggplot(fields_wide) +
  geom_linerange(aes(y = subject_area_or_subfield,
                     xmin = percent_field_women, 
                     xmax = percent_field_men)) +
  geom_point(aes(x = percent_field_women, 
                 y = subject_area_or_subfield, 
                 color = "Women"), size = 2.5) +
  geom_point(aes(x = percent_field_men, 
                 y = subject_area_or_subfield, 
                 color = "Men"),
             size = 2.5) +
  geom_vline(xintercept = .5, linetype = "dashed", color = "gray40") +
  scale_x_continuous(breaks = seq(0, 1, by = 0.1),
                     labels = scales::percent_format(scale = 100)) +  
  scale_color_manual(values = c("Women" = "#ec9bfc", "Men" = "#6A1E99")) + 
  labs(title = "Men Publish More Across Almost All Academic Fields",
       subtitle = "Percentage of total academic publications by men and women",
      x = "Percentage of Total Publications",
      y = "",
      color = "Gender") +
  theme_minimal(base_size = 18)  +
    theme(
    # legend.position = "none",
    text = element_text(family = "serif"),
    plot.title = element_text(face = "bold"),
    plot.subtitle = element_text(size = rel(0.8)),
    axis.title = element_text(size=rel(0.8), face = "plain"),
    # plot.caption = element_text(size=12, face = "plain"))
```

```{r}

fields_wide <- fields_wide %>% 
  mutate(subject_area_or_subfield = fct_reorder(.f = subject_area_or_subfield, 
                                                .x = gender_gap))

ggplot(fields_wide) +
  geom_linerange(aes(y = subject_area_or_subfield,
                     xmin = field_gender_women, 
                     xmax = field_gender_men)) +
  geom_point(aes(x = field_gender_women, 
                 y = subject_area_or_subfield, 
                 color = "Women"), size = 2.5) +
  geom_point(aes(x = field_gender_men, 
                 y = subject_area_or_subfield, 
                 color = "Men"),
             size = 2.5) +
  # scale_x_continuous(labels = scales::percent_format(scale = 1)) +
  scale_color_manual(values = c("Women" = "#ec9bfc", "Men" = "#6A1E99")) + 
  labs(title = "Academic Publications by Gender Across Different Disciplines",
       subtitle = "",
      x = "Number of Total Publications",
      y = "",
      color = "Gender") +
  theme_minimal()
```


```{r}
# write plot to file (aka save as png) ----
ggsave(
  filename = here::here("images", "dumbbell.png"),
  plot = final_plot, 
  device = "png",
  width = 7, 
  height = 9,
  unit = "in",
  dpi = 300
)
```


## Conclusions

1. What have you learned about your data? Have any potentially interesting patterns emerged?
I think my first graph of pie charts shows a nice overall trend of women publications increasing across time. Since by time is binned instead of continuous, I thought it was better to show this change with two separate charts, rather than putting time along the x-axis. Open for thoughts about how to improve this though. 

My graphs two and three are showing the gender publishing gap across two different variables: country and field. I don't love the way the country bar chart looks, I think it might be better with a dumbbell chart like I do later on, but I'd like to find a better visualization. I'm not even super attached to the idea of using country as variable, but I thought I'd explore it at this state. 

The dumbbell chart I like a lot; I appreciate how it makes gender disparities very obvious. I think I could even do a sub-sample and zoom in on the fields with the highest and lowest publishing gaps.


2. In HW #1, you outlined some questions that you wanted to answer using these data. Have you made any strides towards answering those questions? If yes, how so? If no, what next steps do you need to take (e.g. I need to create X plot type, I still need to track down Y data, I need to restructure existing data so that you can visualize it in Z ways, etc.)?
I'm making strides towards understandning how the gender publishing gap is changing over time. However, I haven't made any connection with publishing to overall career progression. The xlsx has other sheets with data about grantee statistics, patent statistics, career progression, and mobility. However, these sheets have significantly less data points, ranging from 25-500 observations as opposed to the 47,000 observations the author statistics has. Additionally, the columns on these other sheets are hard for me to interpret, I'm not sure what they're actually measuring. 

At this point, I can either restructure my question to fit better with the data I do have, or I can look for better data/try to understand what the data I do have is saying. 

3. What challenges do you foresee encountering with your data? These can be data wrangling and / or visualization challenges.

I think the challenges I foresee are pretty much summed up by what I described above. I will spend more time going through the technical report associated with this data to see if I can find anymore clarity. 